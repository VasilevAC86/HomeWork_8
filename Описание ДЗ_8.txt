Задача 1:
1. Создаём класс Empployee с автосвойствами и конструктором
2. Формируем коллекцию сотрудников List<Employee> employees и выводим её в консоль
3. Методами LINQ вытаскиваем все наименования отделов в список name_dep, удаляя из него дублирующие наименования
4. Объявляем словарь salary_dep с парами "ключ-значение" Dictionary<наименование отдела, средняя зарплата отдела>
5. Методами LINQ заполняем словарь salary_dep парами "ключ-значение".
6. Выводим в консоль среднюю зарплату по каждому из отделов (каждую пару ключ-значение словаря).
7. Выводим в консоль отдел с самой высокой средней зарплатой методом MaxBy.
8. Методами LINQ, используя словарь salary_dep и список name_dep, ищем в коллекции сотрудников employees сотрудников с зарплатой > средней по отделу.
9. Создаём коллекцию уровней должности pos_levels, делаем её уникальной (OrderBy) и сортируем её (Distinct).
10. По каждому уровню должности формируем коллекцию сотрудников и методом Sum рассчитываем их суммарную ЗП.

Задача 2:
1. Создаём интерфейс ITransaction с общим поведением (методы) для наследников 
	В кач-ве даты используем структуру DateTime
2. Создаём наследный класс Trans_rubles:ITransaction
3. Создаём наследный класс Trans_dollars:ITransaction
4. В main создаём список транзакций в рублях (trans_russia) и в долларах (trans_oa) (разные наследники одного интерфейса)
5. Создаём метод Date для проверки корректности введённых пользователем дат начала и конце диапазона рассчёта
6. По усл. задачи создаём обобщённый метод float Sum_Avverage<T> для рассчтёта методами LINQ средней суммы транзакций за перид времи, введённым пользователем.
Если дата начала больше даты конца диапазона, то метод свапает их.
метод проверяет, были ли вообще транзакции в указанный период/

Задача 3:
1. Методами LINQ (Concat) создаём объединённую коллекцию классов Trans_rubles и Trans_dollars из задачи № 2.
В кач-ве уникального идентификатора по условиям задачи (GUID) используем поля классов TransactionId (уникальный идентификатор транзакции)
2. Требуемый по усл. задачи метод сделал обобщённым.
Метод может принимать коллекцию объектов любых типов. 
Методами LINQ формирует список типов в переданной коллекции.
Методами LINQ вычисляет, какие поля классов имеют тип string, вычисляет длину этих полей, 
заполяет и возвращает словарь по усл.задачи.